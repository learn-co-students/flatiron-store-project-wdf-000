exit
Category.all
Category
exit
Item.find_by(id: params[:item_id])
exit
params
exit
bundle exec rspec --f-f
@current_user.current_cart
@current_user
@current_user.current_cart.checkout
@current_user.current_cart
@cart
exit
@cart
@cart.checkout
exit
@cart.checkout
exit
bundle exec rspec --f-f
exit
@cart.checkout
exit
@cart
@cart.checkout
@cart = Cart.find(params[:id])
@cart = Cart.find(params[:id]_
@cart.checkout
Cart.find_by(params[:id])
params
@cart
c
n
exit
@cart
@current_user.current_cart
@current_user.current_Car
@current_user
exit
bundle exec rspec --f-f
exit
@cart
@current_user.current_cart
exit
eit
exit
self.current_cart = self.carts.last
self.carts.last
self.carts << cart
self.carts.last
exit
self
self.carts
self.carts.last
self.current_cart
self.current_Cart
self.current_cart = self.carts.last
self.current_Cart = self.carts.last
self.carts << cart
self.carts
exit
second_line_item.new_record?
second_line_item
self.line_items << second_line_item
second_line_item.new_record?
second_line_item = LineItem.new(:item_id => 3, :cart_id =>3)
second_line_item
line_items.all
new_line_item.new_record?
exit
      self.line_items << LineItem.create(:item_id => item_id, :cart_id => self.id, :quantity => 1)
r 17
self.items << item
self.items
exit
self.items
self.cart.item
item_id
self.id
self
LineItem.all
lienitem
LineItem.find_by(:item_id => item_id)
LineItem
    i = LineItem.find_by(:id => item_id)
p
exit
i.line_items
i.line_item
items.line_item
i
self.line_items << i
self.line_items.find_by(:id => item_id)
self.line_items.include?(i)
self.line_item.include?(i)
Item.find_by(:id => item_id)
i
exit
item
exit
i line
i
self.line_items.include?(i)
self.line_items.include?(1)
self.line_items.include(i)?
"i"
i
exit
line_item.item.price.to_i
line_item.item
line_item.quantity
line_item
total_cart = total_cart + line_item.quantity * line_item.item.price
total_cart
total
